@model CertificadoModel
@{
    ViewData["Title"] = "Inclusão de Certificado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="vCertificado">
    <div class="row">
        <div class="col-md-12">
            @using (@Html.BeginForm("Create", "Certificado", FormMethod.Post, new { id = "formCertificado", @class = "form-horizontal" }))
            {
                <section class="panel">
                    <header class="panel-heading">
                        <div class="panel-actions">
                            <a href="#" class="panel-action panel-action-toggle" data-panel-toggle></a>
                        </div>
                        <h2 class="panel-title">Cadastro de Certificado</h2>
                    </header>

                    <div class="panel-body">
                        <div class="form-group row">
                            <label class="col-sm-3 control-label text-sm-right pt-2">Tipo de Curso <span class="required">*</span></label>
                            <div class="col-sm-4">
                                <select class="form-control populate select2" name="ddlTipoCurso" id="ddlTipoCurso" style="width:100%"
                                        required title="Por favor selecione o tipo de curso"
                                        asp-for="TipoCursosId" asp-items="Model.ListTipoCursos">
                                    <option value="">Selecionar Tipo de Curso</option>
                                </select>
                            </div>
                            <label class="col-sm-1 control-label text-sm-right pt-2">Curso <span class="required">*</span></label>
                            <div class="col-sm-4">
                                <select class="form-control populate select2" name="ddlCurso" id="ddlCurso" style="width:100%"
                                        required title="Por favor selecione o curso"
                                        asp-for="CursoId" asp-items="Model.ListCursos">
                                    <option value="">Selecionar Curso</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 control-label text-sm-right pt-2">Status</label>
                            <div class="col-sm-9">
                                <div class="switch switch-sm switch-primary">
                                    <input type="checkbox" name="Status" id="Status" data-plugin-ios-switch checked="checked" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 control-label text-sm-right pt-2">Conteúdo</label>
                            <div class="col-sm-9">
                                <div class="mb-3">
                                    <button type="button" id="btnAddBackground" class="btn btn-default"><i class="fa fa-image"></i> Adicionar Imagem de Fundo</button>
                                    <input type="file" id="bgImageInput" style="display: none" accept="image/*">
                                </div>
                                <div class="summernote" data-plugin-summernote data-plugin-options='{ "height": 180, "codemirror": { "theme": "ambiance" } }'>Start typing...</div>
                            </div>
                        </div>
                    </div>

                    <footer class="panel-footer">
                        <div class="row">
                            <div class="col-md-9 col-md-offset-3">
                                <a href="@Url.Action("Index", "Certificado")" class="btn btn-dark pull-right" style="margin-left: 5px;margin-right: 5px;"><i class="fa fa-reply"></i> &nbsp;&nbsp;Voltar</a>
                                <button type="reset" class="btn btn-danger pull-right" style="margin-left: 5px;"><i class="fa fa-remove"></i> &nbsp;&nbsp;Cancelar</button>
                                <button type="submit" class="btn btn-success pull-right" style="margin-left: 5px;"><i class="fa fa-save"></i> &nbsp;&nbsp;Salvar</button>
                            </div>
                        </div>
                    </footer>
                </section>
            }
        </div>
    </div>
</div>

@section CssSpecificVendor {
    <link rel="stylesheet" href="~/assets/vendor/select2/css/select2.css" />
    <link rel="stylesheet" href="~/assets/vendor/select2-bootstrap-theme/select2-bootstrap.min.css" />
    <link rel="stylesheet" href="~/assets/vendor/summernote/summernote.css" />

    <style>
        /* Estilos do Editor */
        .note-editor {
            margin-bottom: 0;
        }

        .note-editable {
            min-height: 300px;
        }

        .note-btn-group {
            position: relative;
        }

        .note-dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
        }

        .note-editing-area {
            position: relative !important;
            min-height: 300px;
        }

        .note-editable {
            position: relative !important;
            z-index: 1;
        }

        .background-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 0;
            pointer-events: none;
        }
    </style>
}

@section Scripts {
    <!-- Form plugins -->
    <script src="~/assets/vendor/select2/js/select2.js"></script>
    <script src="~/assets/vendor/jquery-validation/jquery.validate.js"></script>
    <script src="~/assets/vendor/jquery-mask/jquery.mask.js"></script>
    <script src="~/assets/vendor/ios7-switch/ios7-switch.js"></script>

    <!-- Summernote -->
    <script src="~/assets/vendor/summernote/summernote.js"></script>
    <script src="~/assets/vendor/summernote/lang/summernote-pt-BR.js"></script>

    <script src="~/assets/javascripts/theme.init.js"></script>

    <script>
        $(document).ready(function () {
            // Select2 com Tipo de Curso
            $("#ddlTipoCurso").change(function () {
                var tipoCursoId = $(this).val();
                $("#ddlCurso").empty();
                $("#ddlCurso").append('<option value="">Selecionar Curso</option>');

                if (tipoCursoId !== "") {
                    $.getJSON(`/Certificado/GetCursosByTipoCursoId/${tipoCursoId}`, function (data) {
                        $.each(data, function (i, item) {
                            $("#ddlCurso").append(`<option value="${item.id}">${item.titulo}</option>`);
                        });
                    });
                }
            });

                // Lógica para imagem de fundo
        $('#btnAddBackground').click(function() {
            $('#bgImageInput').click();
        });
$('#bgImageInput').change(function(e) {
    if (this.files && this.files[0]) {
        var reader = new FileReader();
        reader.onload = function(e) {
            // Seleciona o container do editor
            var $editor = $('.note-editing-area');
            var $editable = $('.note-editable');

            // Remove background anterior se existir
            $editor.find('.background-overlay').remove();

            // Cria um container para o background com overlay
            var $bgContainer = $('<div>').addClass('background-overlay').css({
                'position': 'absolute',
                'top': '0',
                'left': '0',
                'right': '0',
                'bottom': '0',
                'background-image': `url(${e.target.result})`,
                'background-size': 'cover',
                'background-position': 'center',
                'background-repeat': 'no-repeat',
                'opacity': '1',  // Ajustar conforme necessário
                'pointer-events': 'none',
                'z-index': '0'
            });

            // Ajusta o container do editor para posicionamento relativo
            $editor.css({
                'position': 'relative'
            });

            // Ajusta a área editável para ficar acima do background
            $editable.css({
                'position': 'relative',
                'background': 'transparent',
                'z-index': '1'
            });

            // Insere o container de background antes da área editável
            $editor.prepend($bgContainer);
        }
        reader.readAsDataURL(this.files[0]);
    }
        });

        // Inicialização do Summernote modificada
        if ($.fn.summernote) {
            $('.summernote').summernote({
                lang: 'pt-BR',
                height: 300,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture']],
                    ['view', ['fullscreen', 'codeview']]
                ],
                fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],
                callbacks: {
                    onInit: function() {
                        console.log('Summernote initialized');
                    },
                    // Mantemos o callback de upload normal para imagens inseridas pelo editor
                    onImageUpload: function(files) {
                        for (let file of files) {
                            var reader = new FileReader();
                            reader.onloadend = function() {
                                var imgNode = document.createElement('img');
                                imgNode.src = reader.result;
                                $('.summernote').summernote('insertNode', imgNode);
                            }
                            reader.readAsDataURL(file);
                        }
                    }
                }
            });
        }

            // Notificações
            var crud = @ViewBag.CrudMessage;
            if (crud === 1) {
                new PNotify({
                    title: 'Certificado',
                    text: 'Cadastro realizado com sucesso!',
                    type: 'success'
                });
            } else if (crud === 2) {
                new PNotify({
                    title: 'Certificado',
                    text: 'Dados alterados com sucesso.',
                    type: 'warning'
                });
            } else if (crud === 3) {
                new PNotify({
                    title: 'Certificado',
                    text: 'Registro excluído com sucesso.',
                    type: 'error'
                });
            }

            var notify = @ViewBag.NotifyMessage;
            var messagem = '@ViewBag.Notify';

            if (notify === 0) {
                new PNotify({
                    title: 'Certificado',
                    text: messagem,
                    type: 'success'
                });
            } else if (notify === 1) {
                new PNotify({
                    title: 'Certificado',
                    text: messagem,
                    type: 'warning'
                });
            } else if (notify === 2) {
                new PNotify({
                    title: 'Certificado',
                    text: messagem,
                    type: 'error'
                });
            }
        });
    </script>
}