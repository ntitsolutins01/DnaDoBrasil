@model CertificadoModel
@{
    ViewData["Title"] = "Inclusão de Certificado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="vCertificado">
    <div class="row">
        <div class="col-md-12">
            @using (@Html.BeginForm("Create", "Certificado", FormMethod.Post, new { id = "formCertificado", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                <section class="panel">
                    <header class="panel-heading">
                        <div class="panel-actions">
                            <a href="#" class="panel-action panel-action-toggle" data-panel-toggle></a>
                        </div>
                        <h2 class="panel-title">Cadastro de Certificado</h2>
                    </header>

                    <div class="panel-body">
                        <div class="form-group row">
                            <label class="col-sm-3 control-label text-sm-right pt-2">Tipo de Curso <span class="required">*</span></label>
                            <div class="col-sm-4">
                                <select class="form-control populate select2" name="ddlTipoCurso" id="ddlTipoCurso" style="width:100%"
                                        required title="Por favor selecione o tipo de curso"
                                        asp-for="TipoCursosId" asp-items="Model.ListTipoCursos">
                                    <option value="">Selecionar Tipo de Curso</option>
                                </select>
                            </div>
                            <label class="col-sm-1 control-label text-sm-right pt-2">Curso <span class="required">*</span></label>
                            <div class="col-sm-4">
                                <select class="form-control populate select2" name="ddlCurso" id="ddlCurso" style="width:100%"
                                        required title="Por favor selecione o curso"
                                        asp-for="CursoId" asp-items="Model.ListCursos">
                                    <option value="">Selecionar Curso</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 control-label text-sm-right pt-2">Status</label>
                            <div class="col-sm-9">
                                <div class="switch switch-sm switch-primary">
                                    <input type="checkbox" name="Status" id="Status" data-plugin-ios-switch checked="checked" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-sm-3 control-label text-sm-right pt-2">Certificado</label>
                            <div class="col-sm-9">
                                <!-- Tabs de navegação -->
                                <div class="tabs">
                                    <ul class="nav nav-tabs">
                                        <li class="nav-item active">
                                            <a class="nav-link" href="#tabFrente" data-toggle="tab">Frente do Certificado</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" href="#tabVerso" data-toggle="tab">Verso do Certificado</a>
                                        </li>
                                    </ul>
                                    <div class="tab-content">
                                        <!-- Tab Frente -->
                                        <div id="tabFrente" class="tab-pane active">
                                            <div class="form-group mt-3">
                                                <div class="mb-3">
                                                    <button type="button" id="btnAddBackgroundFrente" class="btn btn-default">
                                                        <i class="fa fa-image"></i> Adicionar Imagem de Fundo (Frente)
                                                    </button>
                                                    <button type="button" id="btnRemoveBackgroundFrente" class="btn btn-danger" style="display: none;">
                                                        <i class="fa fa-trash"></i> Remover Imagem de Fundo (Frente)
                                                    </button>
                                                    <input type="file" id="bgImageInputFrente" name="ImagemFrente" style="display: none" accept="image/*">
                                                </div>
                                                <div class="certificate-container">
                                                    <div class="summernote" id="summernoteFrente" name="HtmlFrente" data-plugin-summernote>
                                                        Digite o conteúdo da frente do certificado...
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Tab Verso -->
                                        <div id="tabVerso" class="tab-pane">
                                            <div class="form-group mt-3">
                                                <div class="mb-3">
                                                    <button type="button" id="btnAddBackgroundVerso" class="btn btn-default">
                                                        <i class="fa fa-image"></i> Adicionar Imagem de Fundo (Verso)
                                                    </button>
                                                    <button type="button" id="btnRemoveBackgroundVerso" class="btn btn-danger" style="display: none;">
                                                        <i class="fa fa-trash"></i> Remover Imagem de Fundo (Verso)
                                                    </button>
                                                    <input type="file" id="bgImageInputVerso" name="ImagemVerso" style="display: none" accept="image/*">
                                                </div>
                                                <div class="certificate-container">
                                                    <div class="summernote" id="summernoteVerso" name="HtmlVerso" data-plugin-summernote>
                                                        Digite o conteúdo do verso do certificado...
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <footer class="panel-footer">
                        <div class="row">
                            <div class="col-md-9 col-md-offset-3">
                                <a href="@Url.Action("Index", "Certificado")" class="btn btn-dark pull-right" style="margin-left: 5px;margin-right: 5px;"><i class="fa fa-reply"></i> &nbsp;&nbsp;Voltar</a>
                                <button type="reset" class="btn btn-danger pull-right" style="margin-left: 5px;"><i class="fa fa-remove"></i> &nbsp;&nbsp;Cancelar</button>
                                <button type="submit" class="btn btn-success pull-right" style="margin-left: 5px;"><i class="fa fa-save"></i> &nbsp;&nbsp;Salvar</button>
                            </div>
                        </div>
                    </footer>
                </section>
            }
        </div>
    </div>
</div>

@section CssSpecificVendor {
    <link rel="stylesheet" href="~/assets/vendor/select2/css/select2.css" />
    <link rel="stylesheet" href="~/assets/vendor/select2-bootstrap-theme/select2-bootstrap.min.css" />
    <link rel="stylesheet" href="~/assets/vendor/summernote/summernote.css" />

    <style>
        /* Estilos do Editor */
        .note-editor {
            margin-bottom: 0;
            width: 1140px !important; /* Largura fixa do certificado */
        }

        .note-editable {
            min-height: 813px !important; /* Altura fixa do certificado */
            height: 813px !important;
            max-height: 813px !important;
            width: 1140px !important;
        }

        .note-editing-area {
            position: relative !important;
            height: 813px !important;
            width: 1140px !important;
        }

        .background-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: 0;
            pointer-events: none;
            width: 1140px !important;
            height: 813px !important;
        }

        /* Container para o editor */
        .certificate-container {
            width: 100%;
            overflow-x: auto;
            padding: 20px 0;
        }

        /* Ajuste para as tabs */
        .tab-content {
            background: #FFF;
            padding: 15px;
            border: 1px solid #DDD;
            border-top: none;
            width: 100%;
            overflow-x: auto;
        }

        .note-btn-group {
            position: relative;
        }

        .note-dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
        }

        .nav-tabs {
            margin-bottom: 15px;
        }

        /* Estilos para o modo fullscreen */
        .note-editor.note-frame.fullscreen {
            background-color: rgba(0, 0, 0, 0.85) !important; /* Fundo escuro com transparência */
            display: flex !important;
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }

        .note-editor.fullscreen .note-editing-area {
            background-color: white;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
            margin: 20px auto !important;
        }

        .note-editor.fullscreen .note-toolbar {
            background-color: #f5f5f5 !important;
            border-bottom: 1px solid #ddd;
            width: 100%;
            padding: 10px;
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 5px;
        }

            .note-editor.fullscreen .note-toolbar .note-btn-group {
                background-color: white;
                border-radius: 4px;
            }

        .note-editor.fullscreen .note-statusbar {
            background-color: #f5f5f5;
            border-top: 1px solid #ddd;
            width: 100%;
        }

        /* Ajuste para a área de edição em tela cheia */
        .note-editor.fullscreen .note-editable {
            margin: 0 auto !important;
            box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
        }

        .note-editor.fullscreen .note-editing-area .background-overlay {
            width: 1140px !important;
            height: 813px !important;
            margin: 0 auto;
        }

        /* Estilos do popover de ajuda */
        .popover {
            border: 1px solid #ddd;
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
            max-width: 500px;
            transition: none !important;
            animation: none !important;
        }

        .note-editor.fullscreen .popover {
            z-index: 1050;
        }

        .popover-content {
            padding: 0;
        }

        .help-category {
            border-bottom: 1px solid #eee;
        }

            .help-category:last-child {
                border-bottom: none;
            }

            .help-category h6 {
                background-color: #f8f9fa;
                padding: 8px;
                margin: 0;
                font-weight: bold;
            }

            .help-category code {
                background-color: #f8f9fa;
                color: #e83e8c;
                padding: 2px 4px;
                border-radius: 3px;
                font-family: monospace;
            }

        .table-sm td {
            padding: 4px 8px;
            border-top: 1px solid #eee;
        }

        /* Estilização dos botões do editor */
        .note-btn {
            border: 1px solid #ddd;
            background-color: #fff;
            border-radius: 3px;
            padding: 5px 10px;
            margin: 2px;
        }

            .note-btn:hover {
                background-color: #f8f9fa;
            }

            .note-btn i {
                font-size: 14px;
                color: #666;
            }
    </style>
}

@section Scripts {
    <!-- Form plugins -->
    <script src="~/assets/vendor/select2/js/select2.js"></script>
    <script src="~/assets/vendor/jquery-validation/jquery.validate.js"></script>
    <script src="~/assets/vendor/jquery-mask/jquery.mask.js"></script>
    <script src="~/assets/vendor/ios7-switch/ios7-switch.js"></script>

    <!-- Summernote -->
    <script src="~/assets/vendor/summernote/summernote.js"></script>
    <script src="~/assets/vendor/summernote/lang/summernote-pt-BR.js"></script>

    <script src="~/assets/javascripts/theme.init.js"></script>

    <script>
        // Plugin personalizado do Summernote
        $.extend($.summernote.plugins, {
            'customHelp': function (context) {
                var ui = $.summernote.ui;
                var isPopoverOpen = false;
                var activeButton = null;

                // Função auxiliar para fechar o popover
                function closePopover() {
                    if (activeButton) {
                        $(activeButton).popover('hide');
                        isPopoverOpen = false;
                        activeButton = null;
                        $(document).off('mousedown.customHelp');
                    }
                }

                context.memo('button.customHelp', function () {
                    var button = ui.button({
                        className: 'note-btn',
                        contents: '<i class="fa fa-question-circle"></i>',
                        tooltip: 'Variáveis Disponíveis',
                        click: function (e) {
                            e.preventDefault();
                            e.stopPropagation();

                            var $button = $(this);

                            // Fecha se clicar no mesmo botão que está aberto
                            if (isPopoverOpen && activeButton === this) {
                                closePopover();
                                return;
                            }

                            // Fecha outros popovers abertos
                            if (activeButton) {
                                closePopover();
                            }

                            activeButton = this;

                            var content = '<div style="max-height: 400px; overflow-y: auto; padding: 10px;">';
                            var helpGuide = {
                                'Aluno': {
                                    'aluno_nome': 'Nome do aluno',
                                    'aluno_email': 'E-mail do aluno',
                                    'aluno_cpf': 'CPF do aluno',
                                    'aluno_data_nascimento': 'Data de nascimento do aluno',
                                    'aluno_telefone': 'Telefone do aluno',
                                    'aluno_cidade': 'Cidade do aluno',
                                    'aluno_uf': 'Estado do aluno',
                                    'aluno_frequencia': 'Frequência do aluno',
                                    'aluno_progresso': 'Porcentagem de conclusão do aluno no curso'
                                },
                                'Certificado': {
                                    'cert': 'Código do certificado',
                                    'certificado_nota': 'Média final do aluno',
                                    'certificado_dia_inicio': 'Data de início do curso',
                                    'certificado_dia_fim': 'Data de conclusão do curso',
                                    'certificado_data_validade': 'Data de validade do certificado',
                                    'matricula_dia_cadastro': 'Data da matrícula',
                                    'certificado_carga_horaria': 'Carga horária do curso',
                                    'qrcode_frente': 'QR Code da frente (150px)',
                                    'qrcode_verso': 'QR Code do verso (200px)'
                                },
                                'Curso': {
                                    'curso_titulo': 'Curso',
                                    'curso_professor': 'Nome do professor coordenador do curso',
                                    'curso_modulos': 'Lista de módulos do curso',
                                    'curso_modulos_carga_horaria': 'Lista de módulos do curso com carga horária'
                                },
                                'Escola': {
                                    'seal_name': 'Nome da escola',
                                    'seal_cnpj': 'CNPJ da escola',
                                    'seal_dominio': 'Domínio da escola'
                                }
                            };

                            for (let category in helpGuide) {
                                content += `<div class="help-category" style="margin-bottom: 15px;">
                                    <h6 style="color: #333; font-weight: bold; margin-bottom: 8px;">${category}</h6>
                                    <table class="table table-sm" style="font-size: 12px;">
                                        <tbody>`;

                                for (let variable in helpGuide[category]) {
                                    content += `<tr>
                                        <td style="padding: 4px;"><code>[[${variable}]]</code></td>
                                        <td style="padding: 4px;">${helpGuide[category][variable]}</td>
                                    </tr>`;
                                }

                                content += `</tbody></table></div>`;
                            }
                            content += '</div>';

                            // Configura e mostra o popover
                            $button.popover({
                        html: true,
                        content: content,
                        placement: 'bottom',
                        trigger: 'manual',
                        container: 'body',
                        animation: false, // Desativa animação
                        template: '<div class="popover" role="tooltip" style="max-width: 500px;"><div class="arrow"></div><div class="popover-content"></div></div>'
                    }).popover('show');


                            isPopoverOpen = true;

                            // Remove manipulador de eventos antigo antes de adicionar um novo
                            $(document).off('mousedown.customHelp');

                            // Adiciona novo manipulador de eventos para fechar
                            $(document).on('mousedown.customHelp', function(event) {
                        var $target = $(event.target);
                        if (!$target.closest('.popover').length &&
                            !$target.is($button)) {
                            closePopover();
                        }
                    });
                        }
                    });

                    return button.render();
                });
                // Fecha o popover ao entrar em tela cheia
        context.memo('fullscreen.enter', function() {
            closePopover();
        });

        // Fecha o popover ao sair da tela cheia
        context.memo('fullscreen.exit', function() {
            closePopover();
        });

        // Adiciona manipulador para tecla ESC
        $(document).on('keydown', function(e) {
            if (e.key === 'Escape' && isPopoverOpen) {
                closePopover();
            }
        });
                // Limpa os popovers quando entrar em fullscreen
                context.memo('fullscreen.enter', function() {
                    if (activeButton) {
                        $(activeButton).popover('hide');
                        isPopoverOpen = false;
                        activeButton = null;
                    }
                });
            }
        });

        function initializeSummernote(elementId, bgInputId, bgButtonId, removeButtonId) {
            $(`#${elementId}`).summernote({
                lang: 'pt-BR',
                height: 813,
                width: 1140,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'clear']],
                    ['fontname', ['fontname']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture']],
                    ['customHelp', ['customHelp']], // Nosso botão personalizado
                    ['view', ['fullscreen', 'codeview']]
                ],
                plugins: ['customHelp'],
                fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],
                callbacks: {
                    onInit: function() {
                        $(this).next('.note-editor').find('.note-editing-area').css({
                            'width': '1140px',
                            'height': '813px'
                        });
                    },
                    onEnterFullscreen: function() {
                        const $editor = $(this).next('.note-editor');
                        $editor.find('.note-editable').css({
                            'background-color': 'white',
                            'margin': '20px auto'
                        });

                        setTimeout(() => {
                            const windowHeight = window.innerHeight;
                            const editorHeight = 813;
                            const toolbarHeight = $editor.find('.note-toolbar').outerHeight();
                            const statusbarHeight = $editor.find('.note-statusbar').outerHeight();
                            const topMargin = Math.max(20, (windowHeight - editorHeight - toolbarHeight - statusbarHeight) / 2);

                            $editor.find('.note-editing-area').css({
                                'margin-top': `${topMargin}px`
                            });
                        }, 0);
                    },
                    onExitFullscreen: function() {
                        const $editor = $(this).next('.note-editor');
                        $editor.find('.note-editing-area').css({
                            'margin-top': '0'
                        });
                    }
                }
            });

            // Adicionar imagem
            $(`#${bgButtonId}`).click(function() {
                $(`#${bgInputId}`).click();
            });

            // Remover imagem
            $(`#${removeButtonId}`).click(function() {
                var $editor = $(`#${elementId}`).siblings('.note-editor').find('.note-editing-area');
                $editor.find('.background-overlay').remove();
                $(`#${bgInputId}`).val('');
                $(this).hide();
                $(`#${bgButtonId}`).show();
            });

            // Manipular mudança de imagem
            $(`#${bgInputId}`).change(function(e) {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        var $editor = $(`#${elementId}`).siblings('.note-editor').find('.note-editing-area');
                        var $editable = $editor.find('.note-editable');

                        $editor.find('.background-overlay').remove();

                        var $bgContainer = $('<div>').addClass('background-overlay').css({
                            'position': 'absolute',
                            'top': '0',
                            'left': '0',
                            'right': '0',
                            'bottom': '0',
                            'width': '1140px',
                            'height': '813px',
                            'background-image': `url(${e.target.result})`,
                            'background-size': 'cover',
                            'background-position': 'center',
                            'background-repeat': 'no-repeat',
                            'opacity': '1',
                            'pointer-events': 'none',
                            'z-index': '0'
                        });

                        $editor.css('position', 'relative');
                        $editable.css({
                            'position': 'relative',
                            'background': 'transparent',
                            'z-index': '1'
                        });

                        $editor.prepend($bgContainer);

                        $(`#${removeButtonId}`).show();
                        $(`#${bgButtonId}`).hide();
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        }

        $(document).ready(function () {
            // Select2 com Tipo de Curso
            $("#ddlTipoCurso").change(function () {
                var tipoCursoId = $(this).val();
                $("#ddlCurso").empty();
                $("#ddlCurso").append('<option value="">Selecionar Curso</option>');

                if (tipoCursoId !== "") {
                    $.getJSON(`/Certificado/GetCursosByTipoCursoId/${tipoCursoId}`, function (data) {
                        $.each(data, function (i, item) {
                            $("#ddlCurso").append(`<option value="${item.id}">${item.titulo}</option>`);
                        });
                    });
                }
            });

            // Inicializa os editores
            initializeSummernote('summernoteFrente', 'bgImageInputFrente', 'btnAddBackgroundFrente', 'btnRemoveBackgroundFrente');
            initializeSummernote('summernoteVerso', 'bgImageInputVerso', 'btnAddBackgroundVerso', 'btnRemoveBackgroundVerso');

            // Handler para o submit do formulário
            $('#formCertificado').on('submit', function(e) {
                var htmlFrente = $('#summernoteFrente').summernote('code');
                var htmlVerso = $('#summernoteVerso').summernote('code');

                $('<input>').attr({
                    type: 'hidden',
                    name: 'HtmlFrente',
                    value: htmlFrente
                }).appendTo($(this));

                $('<input>').attr({
                    type: 'hidden',
                    name: 'HtmlVerso',
                    value: htmlVerso
                }).appendTo($(this));
            });

            // Notificações
            var crud = @ViewBag.CrudMessage;
            if (crud === 1) {
                new PNotify({
                    title: 'Certificado',
                    text: 'Cadastro realizado com sucesso!',
                    type: 'success'
                });
            } else if (crud === 2) {
                new PNotify({
                    title: 'Certificado',
                    text: 'Dados alterados com sucesso.',
                    type: 'warning'
                });
            } else if (crud === 3) {
                new PNotify({
                    title: 'Certificado',
                    text: 'Registro excluído com sucesso.',
                    type: 'error'
                });
            }

            var notify = @ViewBag.NotifyMessage;
            var messagem = '@ViewBag.Notify';

            if (notify === 0) {
                new PNotify({
                    title: 'Certificado',
                    text: messagem,
                    type: 'success'
                });
            } else if (notify === 1) {
                new PNotify({
                    title: 'Certificado',
                    text: messagem,
                    type: 'warning'
                });
            } else if (notify === 2) {
                new PNotify({
                    title: 'Certificado',
                    text: messagem,
                    type: 'error'
                });
            }
        });
    </script>
}